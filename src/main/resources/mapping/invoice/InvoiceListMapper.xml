<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.invoice.mapper.InvoiceListMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.invoice.pojo.InvoiceList">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="total_value" jdbcType="DECIMAL" property="totalValue" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="apply_time" jdbcType="VARCHAR" property="applyTime" />
    <result column="over_time" jdbcType="VARCHAR" property="overTime" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="company_id" jdbcType="VARCHAR" property="companyId" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="update_time" jdbcType="VARCHAR" property="updateTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, total_value, project_name, type, remarks, apply_time, over_time, user_id, company_id, 
    create_time, update_time, status
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.invoice.pojo.InvoiceListExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from invoice_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from invoice_list
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from invoice_list
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.invoice.pojo.InvoiceListExample">
    delete from invoice_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.invoice.pojo.InvoiceList">
    insert into invoice_list (id, total_value, project_name, 
      type, remarks, apply_time, 
      over_time, user_id, company_id, 
      create_time, update_time, status
      )
    values (#{id,jdbcType=VARCHAR}, #{totalValue,jdbcType=DECIMAL}, #{projectName,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, #{applyTime,jdbcType=VARCHAR}, 
      #{overTime,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{companyId,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.invoice.pojo.InvoiceList">
    insert into invoice_list
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="totalValue != null">
        total_value,
      </if>
      <if test="projectName != null">
        project_name,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="applyTime != null">
        apply_time,
      </if>
      <if test="overTime != null">
        over_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="totalValue != null">
        #{totalValue,jdbcType=DECIMAL},
      </if>
      <if test="projectName != null">
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="applyTime != null">
        #{applyTime,jdbcType=VARCHAR},
      </if>
      <if test="overTime != null">
        #{overTime,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.invoice.pojo.InvoiceListExample" resultType="java.lang.Long">
    select count(*) from invoice_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update invoice_list
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.totalValue != null">
        total_value = #{record.totalValue,jdbcType=DECIMAL},
      </if>
      <if test="record.projectName != null">
        project_name = #{record.projectName,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.applyTime != null">
        apply_time = #{record.applyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.overTime != null">
        over_time = #{record.overTime,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update invoice_list
    set id = #{record.id,jdbcType=VARCHAR},
      total_value = #{record.totalValue,jdbcType=DECIMAL},
      project_name = #{record.projectName,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      apply_time = #{record.applyTime,jdbcType=VARCHAR},
      over_time = #{record.overTime,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      company_id = #{record.companyId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.invoice.pojo.InvoiceList">
    update invoice_list
    <set>
      <if test="totalValue != null">
        total_value = #{totalValue,jdbcType=DECIMAL},
      </if>
      <if test="projectName != null">
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="applyTime != null">
        apply_time = #{applyTime,jdbcType=VARCHAR},
      </if>
      <if test="overTime != null">
        over_time = #{overTime,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.invoice.pojo.InvoiceList">
    update invoice_list
    set total_value = #{totalValue,jdbcType=DECIMAL},
      project_name = #{projectName,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      apply_time = #{applyTime,jdbcType=VARCHAR},
      over_time = #{overTime,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>


  <!-- 分页查询 -->
  <select id="getInvoiceListPage" parameterType="com.example.demo.invoice.pojo.InvoiceList" resultType="com.example.demo.invoice.pojo.InvoiceList">
    select * from invoice_list where status=1
    <if test="invoiceList!=null">
      <if test="invoiceList.projectName!=null and invoiceList.projectName!=''">
        and ( project_name like concat('%',#{invoiceList.projectName},'%') or   remarks like concat('%',#{invoiceList.projectName},'%'))
      </if>
      <if test="invoiceList.type!=null and invoiceList.type!=''">
        and type = #{invoiceList.type}
      </if>
    </if>
    order by create_time desc
  </select>
</mapper>